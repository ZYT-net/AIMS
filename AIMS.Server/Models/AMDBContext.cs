// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace AIMS.Server.Models;

public partial class AMDBContext : DbContext
{
    public AMDBContext()
    {
    }

    public AMDBContext(DbContextOptions<AMDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Crops> Crops { get; set; }

    public virtual DbSet<FarmRecords> FarmRecords { get; set; }

    public virtual DbSet<Policies> Policies { get; set; }

    public virtual DbSet<Prices> Prices { get; set; }

    public virtual DbSet<Users> Users { get; set; }

//    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
//        => optionsBuilder.UseSqlServer("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=AMDB;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Crops>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Crops__3214EC074FB17D01");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.User).WithMany(p => p.Crops)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Crops__UserId__267ABA7A");
        });

        modelBuilder.Entity<FarmRecords>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FarmReco__3214EC0762FEBC0E");

            entity.Property(e => e.Action).HasMaxLength(100);
            entity.Property(e => e.Description).HasMaxLength(500);
            entity.Property(e => e.RecordDate).HasColumnType("datetime");

            entity.HasOne(d => d.Crop).WithMany(p => p.FarmRecords)
                .HasForeignKey(d => d.CropId)
                .HasConstraintName("FK__FarmRecor__CropI__29572725");
        });

        modelBuilder.Entity<Policies>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Policies__3214EC0798F6D02A");

            entity.Property(e => e.PublishDate).HasColumnType("datetime");
            entity.Property(e => e.Title).HasMaxLength(100);
        });

        modelBuilder.Entity<Prices>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Prices__3214EC0762F1BA29");
            entity.Property(e => e.CropName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Date).HasColumnType("datetime");
            entity.Property(e => e.Price).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<Users>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Users__3214EC07C063538C");

            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(256);
            entity.Property(e => e.Phone).HasMaxLength(20);
            entity.Property(e => e.RealName).HasMaxLength(50);
            entity.Property(e => e.Role)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}